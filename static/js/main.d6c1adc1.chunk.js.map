{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","todo","className","classNames","completed","title","href","user","TodoList","todos","map","getUserById","todoUserId","usersFromServer","find","todosWithUser","userId","App","useState","setTodos","setTitle","titleError","setTitleError","selectedUserId","setSelectedUserId","selectedUserError","setSelectedUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c1adc1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        classNames('TodoInfo',\n          { 'TodoInfo--completed': todo.completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <a className=\"UserInfo\" href={`mailto:${todo.user?.email}`}>\n        {todo.user?.name}\n      </a>\n    </article>\n  );\n};\n","import { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map((todo) => (\n          <TodoInfo todo={todo} />\n        ))\n      }\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types';\n\nconst getUserById = (todoUserId: number) => (\n  usersFromServer.find(user => user.id === todoUserId)\n);\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedUserError, setSelectedUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setSelectedUserError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setSelectedUserError(selectedUserId === 0);\n\n    if (title && selectedUserId !== 0) {\n      const maxId = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo: Todo = {\n        id: maxId + 1,\n        title,\n        completed: false,\n        userId: selectedUserId,\n        user: getUserById(selectedUserId),\n      };\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n      setSelectedUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {\n            titleError\n              && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {\n            selectedUserError\n              && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}